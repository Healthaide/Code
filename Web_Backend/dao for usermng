package cn.itcast.usermng.dao;

import cn.itcast.usermng.domain.User;

public interface UserDao {
	public void addUser(User form);
	public User findByUsername(String username);
}

package cn.itcast.usermng.dao;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import cn.itcast.usermng.domain.User;

public class JdbcUserDaoImpl implements UserDao {
	@Override
	public void addUser(User form) {
		Connection con = null;
		PreparedStatement pstmt = null;
		try {
			/*
			 * 1.get connection
			 */
			con = JdbcUtils.getConnection();
			/*
			 * 2.prepare sql template, get pstmt
			 */
			String sql = "INSERT INTO t_users VALUES(?,?,?,?)";
			pstmt = con.prepareStatement(sql);
			/*
			 * 3.assign value to '?' in pstmt
			 */
			pstmt.setString(1, form.getUsername());
			pstmt.setString(2, form.getPassword());
			pstmt.setInt(3, form.getAge());
			pstmt.setString(4, form.getGender());
			
			/*
			 * 4.execute
			 */
			pstmt.executeUpdate();
		} catch(Exception e) {
			throw new RuntimeException(e);
		} finally {
			try {
				if(pstmt != null) pstmt.close();
				if(con != null) con.close();
			} catch(SQLException e) {}
		}
	}

	@Override
	public User findByUsername(String username) {
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		try {
			/*
			 * 1.get connection
			 */
			con = JdbcUtils.getConnection();
			/*
			 * 2.prepare sql template, get pstmt
			 */
			String sql = "SELECT * FROM t_users WHERE username=?";
			pstmt = con.prepareStatement(sql);
			/*
			 * 3.assign value to '?' in pstmt
			 */
			pstmt.setString(1, username);
			
			/*
			 * 4.execute
			 */
			rs = pstmt.executeQuery();
			
			/*
			 * 5.convert rs into User type, and return
			 */
			if(rs == null) {
				return null;
			}
			if(rs.next()) {

				User user = new User();
				user.setUsername(rs.getString("username"));
				user.setPassword(rs.getString("password"));
				user.setAge(rs.getInt("age"));
				user.setGender(rs.getString("gender"));
				
				
				return user;
			} else {
				return null;
			}
		} catch(Exception e) {
			throw new RuntimeException(e);
		} finally {
			try {
				if(pstmt != null) pstmt.close();
				if(con != null) con.close();
			} catch(SQLException e) {}
		}
	}
}
